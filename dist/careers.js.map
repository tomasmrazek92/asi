{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/utils/globalFunctions.js", "../src/careers.js"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "export const swipers = [];\n\nexport const createSwiper = (componentSelector, swiperSelector, classSelector, options) => {\n  // Globals\n  const arrows = '.slider-arrow';\n  const pagination = '.swiper-navigation';\n  // For Each\n  $(componentSelector).each(function () {\n    // Tag Instance\n    let index = $(this).index();\n    let instanceClass = `${classSelector}_${index}`;\n    $(this).find(swiperSelector).addClass(instanceClass);\n    $(this).find(arrows).addClass(instanceClass);\n    $(this).find(pagination).addClass(instanceClass);\n\n    // Build Options\n    let swiperOptions = Object.assign({}, options, {\n      speed: 250,\n      navigation: {\n        prevEl: `${arrows}.prev.${instanceClass}`,\n        nextEl: `${arrows}.next.${instanceClass}`,\n      },\n      pagination: {\n        el: `${pagination}.${instanceClass}`,\n        type: 'bullets',\n        bulletActiveClass: 'w-active',\n        bulletClass: 'w-slider-dot',\n        clickable: true,\n      },\n    });\n\n    // Update Options\n    for (let key in options) {\n      if (key in swiperOptions) {\n        swiperOptions[key] = options[key];\n      }\n    }\n\n    // Init Slider\n    let swiper = new Swiper(`${swiperSelector}.${instanceClass}`, swiperOptions);\n\n    // Push to Global for possible references\n    // store swiper instance in object using classSelector as key\n    swipers[classSelector] = swipers[classSelector] || {};\n    swipers[classSelector][index] = swiper;\n  });\n};\n\nexport const initializeSnappySnapItems = ({\n  itemsContainerId,\n  getTopOffset,\n  getItemOffset,\n  onInit,\n}) => {\n  const itemsContainer = document.querySelector(`[data-rs-container='${itemsContainerId}']`);\n\n  const items = itemsContainer.querySelectorAll('[data-rs-item]');\n\n  const childElements = Array.from(items);\n  const childElementsCount = childElements.length;\n\n  const recalculatePosition = () => {\n    const itemOffset = getItemOffset?.() || 100;\n    const topOffset = getTopOffset?.() || 0;\n    const itemsContainerRect = itemsContainer.getBoundingClientRect();\n    const lastItemHeight = childElements[childElementsCount - 1].getBoundingClientRect().height;\n    const lastItemContentRect = childElements[childElementsCount - 1]\n      .querySelector('[data-rs-item-content]')\n      .getBoundingClientRect();\n\n    const totalSnappedHeightCount = (childElementsCount - 1) * itemOffset + lastItemHeight;\n\n    const mainContainerBottomOffset = -Math.max(\n      0,\n      totalSnappedHeightCount - itemsContainerRect.bottom + topOffset\n    );\n\n    let totalItemsHeight = 0;\n\n    childElements.forEach((childElement, index) => {\n      const childRect = childElement.getBoundingClientRect();\n      totalItemsHeight += childRect.height;\n      const { top } = childRect;\n\n      const thisItemOffset = itemOffset * index + topOffset;\n      childElement.style.width = '100%';\n      if (mainContainerBottomOffset < 0) {\n        itemsContainer.style.position = `relative`;\n        childElement.style.position = 'absolute';\n        childElement.style.top = 'auto';\n        childElement.style.bottom = `${\n          totalSnappedHeightCount - childRect.height - thisItemOffset\n        }px`;\n      } else {\n        itemsContainer.style.position = `static`;\n        childElement.style.position = 'sticky';\n        childElement.style.top = `${thisItemOffset - mainContainerBottomOffset}px`;\n        childElement.style.bottom = 'auto';\n      }\n    });\n\n    itemsContainer.style.height = `${totalItemsHeight}px`;\n  };\n\n  // initial calculation\n  recalculatePosition();\n  onInit?.({\n    recalculatePosition,\n  });\n};\n", "import { initializeSnappySnapItems } from './utils/globalFunctions';\n\nlet url = 'https://api.ashbyhq.com/posting-api/job-board/airspace-intelligence.com';\n\nif (window.location.pathname === '/careers') {\n  fetch(url)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    })\n    .then((data) => {\n      console.log(data);\n      // Els\n      var positionList = $('.roles_list');\n      var positionItem = positionList.find('li').clone();\n\n      // Clear the list\n      positionList.empty();\n\n      // Sort jobs by title in alphabetical order\n      data.jobs.sort((a, b) => a.department.localeCompare(b.department));\n\n      // Loop through each job\n      for (var x = 0; x < data.jobs.length; x++) {\n        var currentItem = positionItem;\n        currentItem.find('a').attr('href', '/careers/role?=' + data.jobs[x].id);\n        currentItem.find('[data-title]').text(data.jobs[x].title);\n        currentItem.find('[data-location]').text(data.jobs[x].location);\n        positionList.append(currentItem.clone());\n      }\n\n      // Reveal the list\n      positionList.css('opacity', '1');\n    })\n    .catch((error) => console.error('Error fetching data:', error));\n}\n\nif (window.location.pathname === '/careers/role') {\n  var jobId = window.location.search.split('=')[1];\n\n  fetch(url)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    })\n    .then((data) => {\n      // Filter the job by its ID\n      let filteredJob = data.jobs.find((job) => job.id === jobId);\n\n      if (filteredJob) {\n        console.log('Filtered Job:', filteredJob);\n\n        // Set page title dynamically\n        document.title = filteredJob.title + ' | Air Space Intelligence';\n\n        // Update other elements with job details\n        let name = $('[data-name]');\n        let location = $('[data-location]');\n        let type = $('[data-role-type]');\n        let detailLink = $('[data-link]');\n        let detailHtml = $('[data-html]');\n\n        // Fix of EmploymentType\n        function formatEmploymentType(type) {\n          return type.replace(/([a-z])([A-Z])/g, '$1 $2');\n        }\n\n        // Data\n        name.text(filteredJob.title);\n        location.text(filteredJob.location);\n        type.text(formatEmploymentType(filteredJob.employmentType)); // Apply formatting here\n        detailLink.attr('href', filteredJob.jobUrl + '/application'); // Append '/application' here\n        detailHtml.html(filteredJob.descriptionHtml);\n\n        // Reveal\n        $('.role_wrap').addClass('rendered');\n      } else {\n        window.location.href = '/careers#roles';\n      }\n    })\n    .catch((error) => console.error('Error fetching data:', error));\n}\n\n$(document).ready(function () {\n  let isInitialize = false;\n  const htmlEl = document.documentElement;\n\n  const initialize = (container) => {\n    if (isInitialize || typeof window.lenisInstance === 'undefined') return;\n    isInitialize = true;\n    initializeSnappySnapItems({\n      itemsContainerId: 'keys',\n      getTopOffset: () => {\n        return parseInt($('.nav_wrap').css('height'));\n      },\n      getItemOffset: () => {\n        return parseInt($('[data-rs-item-offset]').css('height'));\n      },\n      onInit: ({ recalculatePosition }) => {\n        // observe changes to the element's size and position\n        const resizeObserver = new ResizeObserver(recalculatePosition);\n        resizeObserver.observe(document.body);\n        window.lenisInstance.on('scroll', recalculatePosition);\n      },\n    });\n  };\n\n  let observer = new MutationObserver(function (mutations) {\n    if (htmlEl.className.includes('lenis')) {\n      initialize();\n    }\n  });\n\n  observer.observe(htmlEl, {\n    attributes: true,\n    attributeFilter: ['class'],\n  });\n\n  initialize();\n});\n"],
  "mappings": "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",
  "names": ["formatEmploymentType", "type", "location"]
}
