{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/utils/globalFunctions.js", "../src/company.js"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "export const swipers = [];\n\nexport const createSwiper = (componentSelector, swiperSelector, classSelector, options) => {\n  // Globals\n  const arrows = '.slider-arrow';\n  const pagination = '.swiper-navigation';\n  // For Each\n  $(componentSelector).each(function () {\n    // Tag Instance\n    let index = $(this).index();\n    let instanceClass = `${classSelector}_${index}`;\n    $(this).find(swiperSelector).addClass(instanceClass);\n    $(this).find(arrows).addClass(instanceClass);\n    $(this).find(pagination).addClass(instanceClass);\n\n    // Build Options\n    let swiperOptions = Object.assign({}, options, {\n      speed: 250,\n      navigation: {\n        prevEl: `${arrows}.prev.${instanceClass}`,\n        nextEl: `${arrows}.next.${instanceClass}`,\n      },\n      pagination: {\n        el: `${pagination}.${instanceClass}`,\n        type: 'bullets',\n        bulletActiveClass: 'w-active',\n        bulletClass: 'w-slider-dot',\n        clickable: true,\n      },\n    });\n\n    // Update Options\n    for (let key in options) {\n      if (key in swiperOptions) {\n        swiperOptions[key] = options[key];\n      }\n    }\n\n    // Init Slider\n    let swiper = new Swiper(`${swiperSelector}.${instanceClass}`, swiperOptions);\n\n    // Push to Global for possible references\n    // store swiper instance in object using classSelector as key\n    swipers[classSelector] = swipers[classSelector] || {};\n    swipers[classSelector][index] = swiper;\n  });\n};\n\nexport const initializeSnappySnapItems = ({\n  itemsContainerId,\n  getTopOffset,\n  getItemOffset,\n  onInit,\n}) => {\n  const itemsContainer = document.querySelector(`[data-rs-container='${itemsContainerId}']`);\n\n  const items = itemsContainer.querySelectorAll('[data-rs-item]');\n\n  const childElements = Array.from(items);\n  const childElementsCount = childElements.length;\n\n  const recalculatePosition = () => {\n    const itemOffset = getItemOffset?.() || 100;\n    const topOffset = getTopOffset?.() || 0;\n    const itemsContainerRect = itemsContainer.getBoundingClientRect();\n    const lastItemHeight = childElements[childElementsCount - 1].getBoundingClientRect().height;\n    const lastItemContentRect = childElements[childElementsCount - 1]\n      .querySelector('[data-rs-item-content]')\n      .getBoundingClientRect();\n\n    const totalSnappedHeightCount = (childElementsCount - 1) * itemOffset + lastItemHeight;\n\n    const mainContainerBottomOffset = -Math.max(\n      0,\n      totalSnappedHeightCount - itemsContainerRect.bottom + topOffset\n    );\n\n    let totalItemsHeight = 0;\n\n    childElements.forEach((childElement, index) => {\n      const childRect = childElement.getBoundingClientRect();\n      totalItemsHeight += childRect.height;\n      const { top } = childRect;\n\n      const thisItemOffset = itemOffset * index + topOffset;\n      childElement.style.width = '100%';\n      if (mainContainerBottomOffset < 0) {\n        itemsContainer.style.position = `relative`;\n        childElement.style.position = 'absolute';\n        childElement.style.top = 'auto';\n        childElement.style.bottom = `${\n          totalSnappedHeightCount - childRect.height - thisItemOffset\n        }px`;\n      } else {\n        itemsContainer.style.position = `static`;\n        childElement.style.position = 'sticky';\n        childElement.style.top = `${thisItemOffset - mainContainerBottomOffset}px`;\n        childElement.style.bottom = 'auto';\n      }\n    });\n\n    itemsContainer.style.height = `${totalItemsHeight}px`;\n  };\n\n  // initial calculation\n  recalculatePosition();\n  onInit?.({\n    recalculatePosition,\n  });\n};\n", "import { initializeSnappySnapItems } from './utils/globalFunctions';\n\nfunction initSplit(els) {\n  $(els).each(function () {\n    let typeSplit;\n    let tl;\n    let scrollTriggerInstance;\n\n    let wrap = $(this);\n    let text = wrap.find('[data-animation-text]');\n    let crosshair = wrap.find('[data-animation-crosshair]');\n\n    // Split the text up\n    function runSplit() {\n      // Revert any existing split before creating a new one\n      if (typeSplit) {\n        typeSplit.revert();\n      }\n\n      typeSplit = new SplitType(text, {\n        types: 'words',\n      });\n    }\n\n    function getScrollTriggerSettings() {\n      const width = window.innerWidth;\n\n      if (width < 768) {\n        // Mobile\n        return {\n          start: 'top center',\n          end: 'bottom center',\n        };\n      }\n      if (width < 1024) {\n        // Tablet\n        return {\n          start: 'top 60%',\n          end: 'bottom 40%',\n        };\n      } // Desktop\n      return {\n        start: 'center bottom',\n        end: 'bottom center',\n      };\n    }\n\n    // Clean up existing animations and splits\n    function cleanup() {\n      // Kill specific ScrollTrigger instance if it exists\n      if (scrollTriggerInstance) {\n        scrollTriggerInstance.kill();\n      }\n\n      // Kill GSAP timeline if it exists\n      if (tl) {\n        tl.kill();\n      }\n\n      // Reset crosshair properties\n      if (crosshair.length) {\n        gsap.set(crosshair, {\n          clearProps: 'all',\n        });\n      }\n\n      // Revert split text if it exists\n      if (typeSplit) {\n        typeSplit.revert();\n      }\n    }\n\n    // Create the animation\n    function createAnimation() {\n      const scrollSettings = getScrollTriggerSettings();\n\n      tl = gsap.timeline({\n        scrollTrigger: {\n          trigger: wrap,\n          start: scrollSettings.start,\n          end: scrollSettings.end,\n          scrub: 0.1,\n        },\n      });\n\n      // Store the ScrollTrigger instance\n      scrollTriggerInstance = ScrollTrigger.getAll().pop();\n\n      text.find('.word').each(function (index) {\n        let isHighlight = $(this).closest('[data-highlight-red]').length;\n        tl.to($(this), {\n          color: () => {\n            return isHighlight ? 'red' : 'black';\n          },\n          duration: 0.2,\n          ease: 'none',\n        });\n      });\n\n      if (crosshair.length) {\n        tl.to(\n          crosshair,\n          {\n            y: () => gsap.getProperty(text[0], 'height'),\n            ease: 'none',\n            duration: tl.duration() * 1,\n          },\n          0\n        );\n      }\n    }\n\n    // Function to initialize the split and animation\n    function initAnimation() {\n      cleanup(); // Clean up existing instances\n      runSplit(); // Create new split\n      createAnimation(); // Create new animation\n    }\n\n    // Initial setup\n    initAnimation();\n\n    // Add resize handler with debounce\n    let resizeTimeout;\n    let previousWidth = window.innerWidth;\n\n    window.addEventListener('resize', () => {\n      const currentWidth = window.innerWidth;\n\n      if (currentWidth !== previousWidth) {\n        clearTimeout(resizeTimeout);\n        resizeTimeout = setTimeout(() => {\n          initAnimation();\n          previousWidth = currentWidth;\n        }, 250);\n      }\n    });\n  });\n}\n\nfunction teamSwipers() {\n  const swiperTeamBot = new Swiper('.team-slider-meta', {\n    slidesPerView: 1,\n    effect: 'fade',\n    fadeEffect: {\n      crossFade: true,\n    },\n    spaceBetween: 4,\n    centeredSlides: true,\n    loopAdditionalSlides: 20,\n    loop: true,\n    allowTouchMove: false, // Disable swipe\n    // Navigation arrows\n    navigation: {\n      nextEl: '.swiper-arrow.next',\n      prevEl: '.swiper-arrow.prev',\n    },\n  });\n\n  const swiperTeamTop = new Swiper('.team-slider', {\n    slidesPerView: 1,\n    spaceBetween: 4,\n    centeredSlides: true,\n    loopAdditionalSlides: 20,\n    loop: true,\n    // Navigation arrows\n    navigation: {\n      nextEl: '.swiper-arrow.next',\n      prevEl: '.swiper-arrow.prev',\n    },\n    // Controller\n    controller: {\n      control: swiperTeamBot,\n    },\n  });\n}\n\n// #region stickySection\n\n// #endregion\n\n$(document).ready(function () {\n  let isInitialize = false;\n  const htmlEl = document.documentElement;\n\n  const initialize = (container) => {\n    if (isInitialize || typeof window.lenisInstance === 'undefined') return;\n    isInitialize = true;\n    initializeSnappySnapItems({\n      itemsContainerId: 'offices',\n      getTopOffset: () => {\n        return parseInt($('.nav_wrap').css('height'));\n      },\n      getItemOffset: () => {\n        return parseInt($('[data-rs-item-offset]').css('height'));\n      },\n      onInit: ({ recalculatePosition }) => {\n        // observe changes to the element's size and position\n        const resizeObserver = new ResizeObserver(recalculatePosition);\n        resizeObserver.observe(document.body);\n        if ('ontouchstart' in window) {\n          window.addEventListener('scroll', recalculatePosition);\n        } else {\n          window.lenisInstance.on('scroll', recalculatePosition);\n        }\n      },\n    });\n  };\n\n  let observer = new MutationObserver(function (mutations) {\n    if (htmlEl.className.includes('lenis')) {\n      initialize();\n    }\n  });\n\n  observer.observe(htmlEl, {\n    attributes: true,\n    attributeFilter: ['class'],\n  });\n\n  initialize();\n  initSplit('[data-animation-wrap]');\n  teamSwipers();\n});\n"],
  "mappings": "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",
  "names": []
}
