{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/index.js"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "$(document).ready(() => {\n  // Find all <a> tags in the document and look for external\n  var links = document.getElementsByTagName('a');\n\n  // Get the current domain\n  var currentDomain = window.location.hostname;\n\n  // Loop through each link\n  for (var i = 0; i < links.length; i++) {\n    var link = links[i];\n\n    // Get the link's domain\n    var linkDomain = link.hostname;\n\n    // Check if the link is an external link\n    if (linkDomain !== currentDomain) {\n      // Set the target attribute to \"_blank\"\n      link.setAttribute('target', '_blank');\n    }\n  }\n});\n\nfunction dfCards() {\n  let dfCardsTL;\n  let scrollTriggerInstance;\n\n  ScrollTrigger.defaults({\n    markers: true,\n    anticipatePin: 1,\n  });\n\n  function destroyScrollAnimation() {\n    if (dfCardsTL) {\n      dfCardsTL.kill(true);\n      dfCardsTL = null;\n    }\n\n    if (scrollTriggerInstance) {\n      scrollTriggerInstance.kill(true);\n      scrollTriggerInstance = null;\n    }\n\n    // Optional: Clear any inline styles added by GSAP\n    gsap.set('[data-gsap-clearProps]', { clearProps: 'all' });\n    gsap.set('[data-sticky-visual]', { clearProps: 'all' });\n    gsap.set('.pin-spacer', { clearProps: 'all' });\n  }\n\n  function initScrollAnimation() {\n    destroyScrollAnimation();\n\n    let dfCards = $('[data-sticky-visual=\"animated\"] img');\n    let totalHeight = 0;\n    let lastHeight = 0;\n    let adjustedHeight;\n\n    function calculateSectionHeight() {\n      totalHeight = 0;\n      dfCards.each(function (index) {\n        let height = $(this).height();\n        totalHeight += height;\n\n        if (index === dfCards.length - 1) {\n          adjustedHeight = totalHeight - height;\n        }\n      });\n      return adjustedHeight;\n    }\n\n    function setDynamicZIndex(selector) {\n      const elements = $(selector);\n      const maxZIndex = elements.length;\n\n      elements.each(function (index) {\n        $(this).css('z-index', maxZIndex - index);\n      });\n    }\n\n    gsap.set(dfCards, { position: 'absolute' });\n    setDynamicZIndex(dfCards);\n\n    dfCardsTL = gsap.timeline({\n      scrollTrigger: {\n        trigger: '[data-sticky-visual=\"animated\"]',\n        start: () => `top ${$('.nav_wrap').outerHeight()}`,\n        end: () => `+=${calculateSectionHeight()}`,\n        pin: true,\n        scrub: true,\n        invalidateOnRefresh: true,\n      },\n    });\n\n    dfCards.each(function (index) {\n      console.log($(this));\n      if (index !== dfCards.length - 1) {\n        dfCardsTL.to($(this), {\n          ease: 'none',\n          clipPath: 'inset(0px 0px 100%)',\n        });\n      }\n    });\n  }\n\n  /***** GSAP Resize Handle *****/\n  ScrollTrigger.matchMedia({\n    // desktop\n    '(min-width: 992px)': initScrollAnimation,\n  });\n}\n\n// Init\ndfCards();\n\nconst swiperTeamBot = new Swiper('.team-slider-meta', {\n  slidesPerView: 1,\n  effect: 'fade',\n  fadeEffect: {\n    crossFade: true,\n  },\n  spaceBetween: 4,\n  centeredSlides: true,\n  loopAdditionalSlides: 20,\n  loop: true,\n  allowTouchMove: false, // Disable swipe\n  // Navigation arrows\n  navigation: {\n    nextEl: '.swiper-arrow.next',\n    prevEl: '.swiper-arrow.prev',\n  },\n});\n\nconst swiperTeamTop = new Swiper('.team-slider', {\n  slidesPerView: 1,\n  spaceBetween: 4,\n  centeredSlides: true,\n  loopAdditionalSlides: 20,\n  loop: true,\n  // Navigation arrows\n  navigation: {\n    nextEl: '.swiper-arrow.next',\n    prevEl: '.swiper-arrow.prev',\n  },\n  // Controller\n  controller: {\n    control: swiperTeamBot,\n  },\n});\n"],
  "mappings": "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",
  "names": ["dfCards"]
}
